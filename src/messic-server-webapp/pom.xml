<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>messic-server-webapp</artifactId>
	<packaging>bundle</packaging>
	<name>Messic Webapp</name>

	<properties>
	  <bundle.symbolicName>messic</bundle.symbolicName>
	  <bundle.namespace>messic</bundle.namespace>
	</properties>
  
	<parent>
		<groupId>org.messic</groupId>
		<artifactId>messic</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../messic/pom.xml</relativePath>
	</parent>

	<build>
		<plugins>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				
				<configuration>
				
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						
						<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
						<Embed-Directory>WEB-INF/lib</Embed-Directory>
						<Embed-Transitive>true</Embed-Transitive>
						 
						<Import-Package>*;resolution:=optional,javax.xml.parsers,org.xml.sax,org.w3c.dom,javax.xml.transform</Import-Package>
						
						<Web-ContextPath>/messic</Web-ContextPath>
						<Webapp-Context>/messic</Webapp-Context>
						<_wab>src/main/webapp</_wab>
					</instructions>
					
				</configuration>
			</plugin>

			

	<!-- 
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
						<Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
						<Bundle-Version>${pom.version}</Bundle-Version>
						| assume public classes are in the top package, and private classes are under ".internal" 
						<Export-Package>!${bundle.namespace}.internal.*,${bundle.namespace}.*;version="${pom.version}"</Export-Package>
						<Private-Package>${bundle.namespace}.internal.*</Private-Package>
						| each module can override these defaults in their osgi.bnd file 
						<_include>-osgi.bnd</_include>
					</instructions>
				</configuration>
			</plugin>
			 -->

			<!-- 
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
						<configuration>
							<instructions>
								<Bundle-SymbolicName>messic</Bundle-SymbolicName>
								<Export-Package />
								<Import-Package>javax.servlet,org.w3c.dom,javax.sql,javax.naming,javax.naming.event,javax.xml.*,org.xml.sax.*,javax.servlet.http,javax.servlet.*,javax.servlet.jsp.*,javax.servlet.jsp.jstl.*</Import-Package>
								

								##### 
								<Import-Package>javax.activation,javax.annotation.security,javax.cache
											 ,javax.cache.spi,javax.crypto,javax.crypto.spec,javax.ejb,javax.el,ja
											 vax.enterprise.concurrent,javax.faces.application,javax.faces.compone
											 nt,javax.faces.context,javax.faces.event,javax.imageio,javax.imageio.
											 metadata,javax.imageio.stream,javax.inject,javax.interceptor,javax.jd
											 o,javax.jdo.datastore,javax.jms,javax.jws,javax.mail,javax.mail.inter
											 net,javax.management,javax.management.modelmbean,javax.management.ope
											 nmbean,javax.management.remote,javax.naming,javax.naming.event,javax.
											 naming.spi,javax.net,javax.net.ssl,javax.portlet,javax.resource,javax
											 .resource.cci,javax.resource.spi,javax.resource.spi.endpoint,javax.re
											 source.spi.work,javax.rmi,javax.script,javax.security.auth,javax.secu
											 rity.auth.callback,javax.security.auth.login,javax.security.auth.spi,
											 javax.security.auth.x500,javax.security.jacc,javax.servlet,javax.serv
											 let.annotation,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp
											 .el,javax.servlet.jsp.tagext,javax.sql,javax.sql.rowset,javax.swing,j
											 avax.swing.border,javax.swing.event,javax.swing.filechooser,javax.swi
											 ng.table,javax.swing.text,javax.swing.tree,javax.validation,javax.val
											 idation.bootstrap,javax.validation.constraints,javax.validation.group
											 s,javax.validation.metadata,javax.xml,javax.xml.bind,javax.xml.bind.a
											 nnotation,javax.xml.bind.annotation.adapters,javax.xml.datatype,javax
											 .xml.namespace,javax.xml.soap,javax.xml.stream,javax.xml.stream.event
											 s,javax.xml.stream.util,javax.xml.transform.stax,javax.xml.validation
											 ,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.soap</Import-Package>
 								####
 								### 
								<Import-Package>javax.servlet,javax.naming,javax.servlet.http,javax.servlet.*,javax.servlet.jsp.*,javax.servlet.jsp.jstl.*</Import-Package>
								 ###
								<DynamicImport-Package />
								## 
								<Import-Package>javax.servlet,javax.servlet.http,javax.servlet.*,javax.servlet.jsp.*,javax.servlet.jsp.jstl.*</Import-Package>
								<DynamicImport-Package>javax.*, org.xml.sax, org.xml.sax.*, org.w3c.*</DynamicImport-Package>
								 ##
								 ## 
								<Bundle-ClassPath>.,WEB-INF/classes</Bundle-ClassPath>
 								<Embed-Directory>WEB-INF/lib</Embed-Directory>
								<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
								<Embed-Transitive>true</Embed-Transitive>
 								###
								<Web-ContextPath>messic</Web-ContextPath>
								<Webapp-Context>messic</Webapp-Context>
							</instructions>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<supportedProjectTypes>
						<supportedProjectType>jar</supportedProjectType>
						<supportedProjectType>bundle</supportedProjectType>
						<supportedProjectType>war</supportedProjectType>
					</supportedProjectTypes>
					<instructions>
					</instructions>
				</configuration>
			</plugin>
			 -->

			<!-- jrebel plugin to easily develop -->
			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>jrebel-maven-plugin</artifactId>
				<version>1.1.5</version>
				<executions>
					<execution>
						<id>generate-rebel-xml</id>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<packaging>war</packaging>
					<classpath>
						<fallback>default</fallback>
						<resources>
							<resource>
								<directory>
									${basedir}/../messic-server-logics/target/classes
								</directory>
							</resource>
							<resource>
								<directory>
									${basedir}/../messic-server-datamodel/target/classes
								</directory>
							</resource>
						</resources>
					</classpath>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.zeroturnaround
										</groupId>
										<artifactId>
											jrebel-maven-plugin
										</artifactId>
										<versionRange>
											[1.1.5,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.felix
										</groupId>
										<artifactId>
											maven-bundle-plugin
										</artifactId>
										<versionRange>
											[2.4.0,)
										</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>5.0.0</version>
		</dependency>


		<dependency>
			<groupId>org.messic</groupId>
			<artifactId>messic-server-logics</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.3.0</version>
		</dependency>
	</dependencies>

</project>