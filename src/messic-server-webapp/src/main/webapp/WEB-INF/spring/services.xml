<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"  
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"> 

	<!-- JSR-303 support will be detected on classpath and enabled automatically -->
	<!-- declares explicit support for annotation-driven MVC controllers (i.e. @RequestMapping, @Controller, although support for those is the default behaviour), as well as adding support for declrative validation via @Valid and message body marshalling with @RequestBody/ResponseBody. -->
	<!-- http://www.alex-arriaga.com/solving-the-matching-wildcard-is-strict-but-no-declaration-can-be-found-for-element-mvcannotation-driven/ -->
    <mvc:annotation-driven/>

	<mvc:interceptors>
		<bean class="org.messic.server.facade.controllers.SetCharacterEncodingInterceptor"/>
	</mvc:interceptors>
        
    <!-- http://renidev.wordpress.com/2009/02/02/how-to-use-springs-context-component-scan-and-annotation/ -->
    <!-- It allow us to use @Autowire, @Required and @Qualifier annotations.-->
	<context:annotation-config />
	
	<!-- It allow @Component, @Service, @Controller, etc.. annotations. -->
	<context:component-scan base-package="org.messic.server.facade.security,org.messic.server.facade.controllers,org.messic.server.datamodel,org.messic.server.api,org.messic.server.api.randomlists" />
</beans>